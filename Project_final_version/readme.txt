Пример базы данных сервиса "Яндекс.Еда". Какой она могла бы быть.
Данная БД позволяет хранить данные пользователей(заказчиков), данные ресторанов, производящих доставку еды, данные заказов пользователей.
Так же при помощи данной БД можно смотреть данные о рейтинге ресторанов, менять рейтинг в зависимости от оценки пользователей и т.д.
Данная БД позволяет производить анализ данных о заказах. И т.д. и т.п.

Файлы проекта:
ERDiagram_yaeda_v1.png - ER диаграмма связей между таблицыми БД.
description_YaEda_db.txt - файл с описнаниями и созданием таблиц.
YaEdaSelect.txt - файл с примерами выборок данных.
YaEdaInsert.txt - файл заполнениями данными.
YaEdaFuncProc.txt - файл с примерами процедур.


ОПИСАНИЕ ТАБЛИЦ:
В базе данных существует 15 таблиц:

1. customers - реализует таблицу пользователей-заказчиков, содержит данные имени, фамилии, номера телефона и эл.почты, поле заказчика, его дне рождения и согласии на рассылку реклам и акции по sms и эл.почте (т.к. есть такая функуция в яндекс.еда) а так же когда этот пользователь зарегестрировался и когда последний раз изменял свои данные;

2. addresses - реализует таблицу адрессов пользователей. Содержит 2 поля - id адреса и сам адрес в виде текста(для простоты). В этой таблице хранятся уникальные значения адресов пользователей. Т.к. у пользователя может быть неколько зарегесрированных адресов доставки, то целесообразно создать отдельно общую таблицу адресов и дополнительную таблицу связи пользователь-адрес;

3. r_customers_addresses - таблица отношений пользователей и их адресов. Два поля: customer_id, address_id. Позволяет устанавливать связь между пользователями и его адресами.

4. restaurants - таблица ресторанов, совершающих доставку. В данной таблице содержатся данные о: id ресторана, название ресторана, рейтинг ресторана, данные о привязки ресторана к Яндекс.Еда и данные об последнем изменении своих данных.

5. restaurants_addresses - таблица адресов ресторанов: id адреса, id ресторана, адрес текстом, координаты (долгота, широта). Координаты нужны для определения близости ресторана к пользователю, что дает возможность выбирать пользователю доставку, которая скорее всего будет быстрой. 

6. categories - таблица категорий еды, к которой относят себя рестораны и еда(например может быть американская кухня, европейская, фастфуд, бургеры, полезная еда и т.д.). Содержит 3 поля: id, category_name, created_at;

7. r_restaurants_categories - таблица отношений ресторанов и категорий. Два поля: restaurant_id, category_id. Позволяет давать ресторану не только одну категорию еды.

8. dishes - таблица блюд меню (например борщ, сэндвич с рыбой и т.д.). В данной таблице содержатся данные о: id данного элемента, его название, описание блюда меню, его рецепт, цена, вес, данные о добавлении в меню и данные об изменении блюда(created_at, updated_at);

9. r_dishes_categories - таблица отношений блюд и категории еды. Например блюдо: бутерброд с красной икрой может относится к категории русская кузня и к категории рыба.

10. r_restaurants_dishes - таблица отношений блюд и ресторанов. В данной таблице устанавливается свящь между ресторанами и блюдами, которые в нем есть.

11. orders - таблица заказов. В данной таблице содержится: id заказа, id ресторана, id заказчика, время заказа, время доставки, id адреса заказчика, цена, вес заказа, id курьера, id способа оплаты;

12. r_orders_dishes - таблица отношений блюд и заказа. В данной таблице содержится: id блюда, id заказа,  количество блюда;

13. couriers - таблица курьеров. В ней содержатся их id, имена, рейтинг, телефон, created_at, updated_at;

14. payments - таблица способов оплаты : id способа, название.;

15. remoutless - таблица удаленности ресторана от пользователя. Имеет 5 значений расположения ресторана: очень горячо, горячо, тепло, холодно, очень холодно. Данная таблица ни с какой таблицей не связана. Она нужна для группирования ресторанов по типу близости к пользователю, т.е. у нас будут геоданные пользователя(долгота, широта), у нас есть координаты каждого ресторана и при помощи джойна этой таблицы можно будет группировать рестораны.
