#ТРАНЗАКЦИИ

1. В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.

START TRANSACTION;
INSERT INTO sample.users
	SELECT * FROM shop.users WHERE shop.users.id = 1;
COMMIT;

2. Создайте представление, которое выводит название name товарной позиции из таблицы products и соответствующее название каталога name из таблицы catalogs.

CREATE VIEW ex2(product_name,catalog_name) AS 
	SELECT p.name, c.name FROM products p
	LEFT JOIN catalogs c 
	ON c.id = p.id ;

3. Пусть имеется таблица с календарным полем created_at. В ней размещены разряженые календарные записи за август 2018 года '2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. Составьте запрос, который выводит полный список дат за август, выставляя в соседнем поле значение 1, если дата присутствует в исходной таблице и 0, если она отсутствует.

 


#ХРАНИМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ. ТРИГГЕРЫ

1. Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток. С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".
DELIMITER //
DROP FUNCTION IF EXISTS hello//
CREATE FUNCTION hello()
RETURNS VARCHAR(255) DETERMINISTIC
BEGIN
  DECLARE var_name VARCHAR(255);
  SET var_name = '';
  SET var_name = (CASE
    WHEN HOUR(NOW())>= 6 AND  HOUR(NOW()) < 12 THEN  'ДОБРОЕ УТРО'
	WHEN HOUR(NOW()) >= 12 AND HOUR(NOW()) < 18 THEN   'ДОБРЫЙ ДЕНЬ'
	WHEN HOUR(NOW()) >= 18 AND HOUR(NOW()) < 24 THEN 'ДОБРЫЙ ВЕЧЕР'
	WHEN HOUR(NOW()) >=0 AND HOUR(NOW()) < 6 THEN  'ДОБРОЙ НОЧИ'
  END);
  RETURN var_name;
END//  


2. В таблице products есть два текстовых поля: name с названием товара и description с его описанием. Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема. Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены. При попытке присвоить полям NULL-значение необходимо отменить операцию.

CREATE TRIGGER check_not_null_update BEFORE UPDATE ON products 
FOR EACH ROW BEGIN
IF ( NEW.name IS NULL AND NEW.description IS NULL ) THEN 
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'UPDATE canceled 1';
END IF;
IF (OLD.name IS NOT NULL) THEN 
	SET NEW.description = NEW.description;
ELSEIF (OLD.name IS NULL AND OLD.description IS NULL AND NEW.description IS NOT NULL) THEN 
	SET NEW.description = NEW.description;
ELSEIF (OLD.name IS NULL AND OLD.description IS NULL AND NEW.description IS NULL) THEN 
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'UPDATE canceled 2';
END IF;
IF (OLD.description IS NOT NULL) THEN 	
	SET NEW.name = NEW.name;
ELSEIF (OLD.description IS NULL AND OLD.name IS NULL AND NEW.name IS NOT NULL) THEN 
	SET NEW.name = NEW.name;
ELSEIF (OLD.description IS NULL AND OLD.name IS NULL AND NEW.name IS NULL) THEN 
	SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'UPDATE canceled 3';
END IF;
END//