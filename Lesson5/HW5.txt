Практическое задание по теме “Операторы, фильтрация, сортировка и ограничение”
1)Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.

UPDATE users SET created_at = NOW(), updated_at = NOW();

2)Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате "20.10.2017 8:10". Необходимо преобразовать поля к типу DATETIME, сохранив введеные ранее значения.

UPDATE users SET created_at = DATE_FORMAT(str_to_date(created_at, '%d.%m.%Y %H:%i'), '%Y-%m-%d %H:%i');
UPDATE users SET updated_at = DATE_FORMAT(str_to_date(updated_at, '%d.%m.%Y %H:%i'), '%Y-%m-%d %H:%i');
ALTER TABLE users MODIFY COLUMN created_at DATETIME, updated_at DATETIME;

3)В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. Однако, нулевые запасы должны выводиться в конце, после всех записей.

SELECT id, value FROM (
SELECT *,
CASE
		WHEN value = 0 THEN 'zero'
		ELSE 'NOT zero'
END AS st
FROM storehouses_products ORDER BY st,value) AS A;

4)Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. Месяцы заданы в виде списка английских названий ('may', 'august').

CREATE TABLE users (
id INT UNSIGNED NOT NULL PRIMARY KEY AUTO_INCREMENT,
name VARCHAR(30) NOT NULL,
last_name VARCHAR(50) NOT NULL,
birthday date
);

INSERT INTO users(name,last_name,birthday) VALUES ('Max','Rodriges','1992-01-01');
INSERT INTO users(name,last_name,birthday) VALUES ('Leo','Orlando','1992-05-12');
INSERT INTO users(name,last_name,birthday) VALUES ('Kate','Kempbell','1995-09-01');
INSERT INTO users(name,last_name,birthday) VALUES ('Cris','Tucker','2000-05-04');
INSERT INTO users(name,last_name,birthday) VALUES ('Antony','Ront','1999-01-09');
INSERT INTO users(name,last_name,birthday) VALUES ('Jessy','Pinkman','1991-08-29');

SELECT * FROM users WHERE MONTHNAME(birthday) IN ('may', 'august');

5)Из таблицы catalogs извлекаются записи при помощи запроса. SELECT * FROM catalogs WHERE id IN (5, 1, 2); Отсортируйте записи в порядке, заданном в списке IN

SELECT * FROM catalogs WHERE id IN (5, 1, 2) ORDER BY FIELD(id, 5, 1, 2); 


Практическое задание теме “Агрегация данных”
1)Подсчитайте средний возраст пользователей в таблице users
SELECT SUM(FLOOR((TO_DAYS(NOW()) - TO_DAYS(birthday))/365.25))/COUNT(*) AS age FROM users;
или
SELECT AVG(FLOOR((TO_DAYS(NOW()) - TO_DAYS(birthday))/365.25)) AS age FROM users;
или
SELECT AVG(FLOOR(DATEDIFF(NOW(), birthday)/365.25)) FROM users;

2)Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.

SELECT DAYNAME(
			   DATE_ADD(birthday, INTERVAL (YEAR(NOW())-YEAR(birthday)) YEAR)
			   )
	   AS this_year_birthday,
	   COUNT(*) AS COUNT_OF_DAYS
       FROM users
       GROUP BY this_year_birthday;

3)Подсчитайте произведение чисел в столбце таблицы
CREATE TEMPORARY TABLE num_tbl (
value INT NOT NULL);
INSERT INTO num_tbl VALUES(1),(2),(3),(4),(5);
SELECT EXP(SUM(LOG(value))) FROM num_tbl;
